version: 0.2

env:
  variables:
    REGISTRY: "public.ecr.aws/risken"
    IMAGE_DEPENDENCY_BASE: "code/dependency-base"

phases:
  install:
    commands:
      - export DOCKER_CLI_EXPERIMENTAL=enabled
  pre_build:
    commands:
      - echo Setting environment variables
      - BUILD_OPT="--no-cache --pull"

      - echo Logging in to Amazon ECR...
      - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${REGISTRY}
  build:
    commands:
      - echo Build dependency base image manifest started on `date`
      - TAG=${DEPENDENCY_BASE_VERSION}
      # version tag
      - docker manifest create ${REGISTRY}/${IMAGE_DEPENDENCY_BASE}:${TAG} ${REGISTRY}/${IMAGE_DEPENDENCY_BASE}:${TAG}_linux_amd64 ${REGISTRY}/${IMAGE_DEPENDENCY_BASE}:${TAG}_linux_arm64
      - docker manifest annotate --arch amd64 ${REGISTRY}/${IMAGE_DEPENDENCY_BASE}:${TAG} ${REGISTRY}/${IMAGE_DEPENDENCY_BASE}:${TAG}_linux_amd64
      - docker manifest annotate --arch arm64 ${REGISTRY}/${IMAGE_DEPENDENCY_BASE}:${TAG} ${REGISTRY}/${IMAGE_DEPENDENCY_BASE}:${TAG}_linux_arm64
      # latest
      - docker manifest create ${REGISTRY}/${IMAGE_DEPENDENCY_BASE}:latest ${REGISTRY}/${IMAGE_DEPENDENCY_BASE}:${TAG}_linux_amd64 ${REGISTRY}/${IMAGE_DEPENDENCY_BASE}:${TAG}_linux_arm64
      - docker manifest annotate --arch amd64 ${REGISTRY}/${IMAGE_DEPENDENCY_BASE}:latest ${REGISTRY}/${IMAGE_DEPENDENCY_BASE}:${TAG}_linux_amd64
      - docker manifest annotate --arch arm64 ${REGISTRY}/${IMAGE_DEPENDENCY_BASE}:latest ${REGISTRY}/${IMAGE_DEPENDENCY_BASE}:${TAG}_linux_arm64

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker manifest...
      # push manifests
      - docker manifest push ${REGISTRY}/${IMAGE_DEPENDENCY_BASE}:${TAG}
      - docker manifest push ${REGISTRY}/${IMAGE_DEPENDENCY_BASE}:latest
      # inspect
      - docker manifest inspect ${REGISTRY}/${IMAGE_DEPENDENCY_BASE}:${TAG}
      - docker manifest inspect ${REGISTRY}/${IMAGE_DEPENDENCY_BASE}:latest
